package Omtbs;

import static Omtbs.ForgetPassword.ResetPassUserName;
import java.awt.Color;
import java.awt.Toolkit;
import java.sql.*;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/* @author richu */

public class ResetPassword extends javax.swing.JFrame {

    String newline = System.lineSeparator();
    
    /* Creates new form ResetPassword */
    public ResetPassword() {
        initComponents();
        this.HidePasswordIcon.setVisible(false);
        this.HideConfirmPasswordIcon.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        ResetPasswordPanel = new javax.swing.JPanel();
        CompanyLogo = new javax.swing.JLabel();
        MinimizeIcon = new javax.swing.JLabel();
        ResetImg = new javax.swing.JLabel();
        NewPasswordName = new javax.swing.JLabel();
        NewPasswordIcon = new javax.swing.JLabel();
        TextNewPassword = new javax.swing.JPasswordField();
        ConfirmNewPasswordName = new javax.swing.JLabel();
        ConfirmNewPasswordIcon = new javax.swing.JLabel();
        TextNewConfirmPassword = new javax.swing.JPasswordField();
        UpdateButton = new javax.swing.JButton();
        ShowPasswordIcon = new javax.swing.JButton();
        HidePasswordIcon = new javax.swing.JButton();
        ShowConfirmPasswordIcon = new javax.swing.JButton();
        HideConfirmPasswordIcon = new javax.swing.JButton();
        ResetPasswordBgImg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reset Password");
        setLocationByPlatform(true);
        setName("ResetPasswordFrame"); // NOI18N
        setUndecorated(true);

        ResetPasswordPanel.setBackground(new java.awt.Color(255, 255, 255));
        ResetPasswordPanel.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        CompanyLogo.setFont(new java.awt.Font("Trebuchet MS", 1, 24)); // NOI18N
        CompanyLogo.setForeground(new java.awt.Color(255, 255, 255));
        CompanyLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/lightning _50px.png"))); // NOI18N
        CompanyLogo.setText("RESET PASSWORD");
        CompanyLogo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ResetPasswordPanel.add(CompanyLogo, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 270, 50));

        MinimizeIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Minimize_50px.png"))); // NOI18N
        MinimizeIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        MinimizeIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                MinimizeIconMouseClicked(evt);
            }
        });
        ResetPasswordPanel.add(MinimizeIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(860, 10, 50, 50));

        ResetImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/passwordup_180px.png"))); // NOI18N
        ResetPasswordPanel.add(ResetImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 100, 180, 180));

        NewPasswordName.setBackground(new java.awt.Color(255, 255, 255));
        NewPasswordName.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        NewPasswordName.setForeground(new java.awt.Color(255, 255, 255));
        NewPasswordName.setText("New Password:");
        ResetPasswordPanel.add(NewPasswordName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 340, 190, 40));

        NewPasswordIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NewPasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/password_50px.png"))); // NOI18N
        ResetPasswordPanel.add(NewPasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 340, 50, 50));

        TextNewPassword.setBackground(new java.awt.Color(204, 204, 204));
        TextNewPassword.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TextNewPassword.setToolTipText("Password must contain at least 8 characters with (Captial letters, Small letters, Numbers, Special Charcters @ ! # $ % & * - + )");
        TextNewPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        ResetPasswordPanel.add(TextNewPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 340, 330, 40));

        ConfirmNewPasswordName.setBackground(new java.awt.Color(255, 255, 255));
        ConfirmNewPasswordName.setFont(new java.awt.Font("Trebuchet MS", 1, 20)); // NOI18N
        ConfirmNewPasswordName.setForeground(new java.awt.Color(255, 255, 255));
        ConfirmNewPasswordName.setText("Confirm Password:");
        ResetPasswordPanel.add(ConfirmNewPasswordName, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 470, 190, 40));

        ConfirmNewPasswordIcon.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        ConfirmNewPasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/key_50px.png"))); // NOI18N
        ResetPasswordPanel.add(ConfirmNewPasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 470, 50, 50));

        TextNewConfirmPassword.setBackground(new java.awt.Color(204, 204, 204));
        TextNewConfirmPassword.setFont(new java.awt.Font("Arial", 1, 18)); // NOI18N
        TextNewConfirmPassword.setToolTipText("Password must contain at least 8 characters with (Captial letters, Small letters, Numbers, Special Charcters @ ! # $ % & * - + )");
        TextNewConfirmPassword.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 255, 255), 3, true));
        ResetPasswordPanel.add(TextNewConfirmPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 470, 330, 40));

        UpdateButton.setBackground(new java.awt.Color(255, 51, 102));
        UpdateButton.setFont(new java.awt.Font("Trebuchet MS", 1, 18)); // NOI18N
        UpdateButton.setForeground(new java.awt.Color(255, 255, 255));
        UpdateButton.setText("Update");
        UpdateButton.setBorder(null);
        UpdateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                UpdateButtonActionPerformed(evt);
            }
        });
        ResetPasswordPanel.add(UpdateButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 650, 450, 50));

        ShowPasswordIcon.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ShowPasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        ShowPasswordIcon.setToolTipText("Show Password");
        ShowPasswordIcon.setBorder(null);
        ShowPasswordIcon.setBorderPainted(false);
        ShowPasswordIcon.setContentAreaFilled(false);
        ShowPasswordIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowPasswordIcon.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        ShowPasswordIcon.setSelected(true);
        ShowPasswordIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ShowPasswordIconMousePressed(evt);
            }
        });
        ResetPasswordPanel.add(ShowPasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 340, 40, 40));

        HidePasswordIcon.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        HidePasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Seen_40px.png"))); // NOI18N
        HidePasswordIcon.setToolTipText("Hide Password");
        HidePasswordIcon.setBorder(null);
        HidePasswordIcon.setBorderPainted(false);
        HidePasswordIcon.setContentAreaFilled(false);
        HidePasswordIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HidePasswordIcon.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        HidePasswordIcon.setSelected(true);
        HidePasswordIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HidePasswordIconMousePressed(evt);
            }
        });
        ResetPasswordPanel.add(HidePasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 340, 40, 40));

        ShowConfirmPasswordIcon.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        ShowConfirmPasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        ShowConfirmPasswordIcon.setToolTipText("Show Password");
        ShowConfirmPasswordIcon.setBorder(null);
        ShowConfirmPasswordIcon.setBorderPainted(false);
        ShowConfirmPasswordIcon.setContentAreaFilled(false);
        ShowConfirmPasswordIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        ShowConfirmPasswordIcon.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        ShowConfirmPasswordIcon.setSelected(true);
        ShowConfirmPasswordIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ShowConfirmPasswordIconMousePressed(evt);
            }
        });
        ResetPasswordPanel.add(ShowConfirmPasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, 40, 40));

        HideConfirmPasswordIcon.setFont(new java.awt.Font("Arial", 0, 18)); // NOI18N
        HideConfirmPasswordIcon.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Seen_40px.png"))); // NOI18N
        HideConfirmPasswordIcon.setToolTipText("Hide Password");
        HideConfirmPasswordIcon.setBorder(null);
        HideConfirmPasswordIcon.setBorderPainted(false);
        HideConfirmPasswordIcon.setContentAreaFilled(false);
        HideConfirmPasswordIcon.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        HideConfirmPasswordIcon.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Eye_40px.png"))); // NOI18N
        HideConfirmPasswordIcon.setSelected(true);
        HideConfirmPasswordIcon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                HideConfirmPasswordIconMousePressed(evt);
            }
        });
        ResetPasswordPanel.add(HideConfirmPasswordIcon, new org.netbeans.lib.awtextra.AbsoluteConstraints(730, 470, 40, 40));

        ResetPasswordBgImg.setIcon(new javax.swing.ImageIcon(getClass().getResource("/OmtbsImages/Gravel_960px.jpg"))); // NOI18N
        ResetPasswordPanel.add(ResetPasswordBgImg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 920, 760));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(ResetPasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(ResetPasswordPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(2, 2, 2))
        );

        setSize(new java.awt.Dimension(920, 762));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void UpdateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_UpdateButtonActionPerformed
        boolean PL = PasswordLength();
        boolean PC = Passwordcheck();
        String npass = String.valueOf(TextNewPassword.getPassword());
        String cnpass = String.valueOf(TextNewConfirmPassword.getPassword());
        if(npass.equals("")) {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null, "Please Enter The New Password", "New Password", JOptionPane.WARNING_MESSAGE);
        }
        else if(cnpass.equals("")){
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,"Please Enter The New Confirm Password" , "New Confirm Password", JOptionPane.WARNING_MESSAGE);
        }
        else if(PL==true && PC==true){
            try{
                String Username  = new ForgetPassword().ResetPassUserName;
                System.out.print(newline);
                System.out.print(Username);
                System.out.print(newline);
                PreparedStatement ps;
                ResultSet rs;
                String PassUpdateQuery ="UPDATE `user` SET USER_PASSWORD=? WHERE USER_NAME=?";
                ps = MyConnection.getConnection().prepareStatement(PassUpdateQuery);
                ps.setString(1, npass); 
                ps.setString(2, Username); 
                ps.executeUpdate();
                JOptionPane.showMessageDialog(null,"User Password Has Been Successfully Updated" , "User Updated Password", JOptionPane.INFORMATION_MESSAGE);
                Login log = new Login();
                log.setVisible(true);
                log.pack();
                log.setLocationRelativeTo(null);
                log.setExtendedState(JFrame.EXIT_ON_CLOSE);
                this.dispose();
     
            }
            catch (SQLException ex) 
               {
                    Logger.getLogger(ResetPassword.class.getName()).log(Level.SEVERE, null, ex);
                    Toolkit.getDefaultToolkit().beep();
                    JOptionPane.showMessageDialog(null,"Password Updation Error!" , "Updataion Error Message", JOptionPane.ERROR_MESSAGE);
               }
        }
        else{
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,"PASSWORD UPDATION FAILED!" , "PASSWORD UPDATION MESSAGE", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_UpdateButtonActionPerformed

    private void MinimizeIconMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_MinimizeIconMouseClicked
        this.setState(JFrame.ICONIFIED);
    }//GEN-LAST:event_MinimizeIconMouseClicked

    private void ShowPasswordIconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowPasswordIconMousePressed
        HidePasswordIcon.setVisible(true);
        ShowPasswordIcon.setVisible(false);
        TextNewPassword.setEchoChar((char)0);
    }//GEN-LAST:event_ShowPasswordIconMousePressed

    private void HidePasswordIconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HidePasswordIconMousePressed
        ShowPasswordIcon.setVisible(true);
        HidePasswordIcon.setVisible(false);
        TextNewPassword.setEchoChar('*');
    }//GEN-LAST:event_HidePasswordIconMousePressed

    private void ShowConfirmPasswordIconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ShowConfirmPasswordIconMousePressed
        HideConfirmPasswordIcon.setVisible(true);
        ShowConfirmPasswordIcon.setVisible(false);
        TextNewConfirmPassword.setEchoChar((char)0);
    }//GEN-LAST:event_ShowConfirmPasswordIconMousePressed

    private void HideConfirmPasswordIconMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_HideConfirmPasswordIconMousePressed
        ShowConfirmPasswordIcon.setVisible(true);
        HideConfirmPasswordIcon.setVisible(false);
        TextNewConfirmPassword.setEchoChar('*');
    }//GEN-LAST:event_HideConfirmPasswordIconMousePressed

    public boolean Passwordcheck(){
        String pass = String.valueOf(TextNewPassword.getPassword());
        String repass = String.valueOf(TextNewConfirmPassword.getPassword());
        if(pass.equals(repass)){
            TextNewConfirmPassword.setBackground(Color.GREEN);
            return true;
        }
        else if("".equals(repass)){
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,"Please Re Enter Password! ");
            return false;
        }
        else {
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,"Enter Same Password");
            TextNewConfirmPassword.setBackground(new Color(246, 53, 40));
            return false;
        }
    }
    
    public boolean PasswordLength(){
        String pass = String.valueOf(TextNewPassword.getPassword());
        if( pass.length() >7 && pass.length() <= 16 ){
            TextNewPassword.setBackground(Color.GREEN);
            return true;
        }
        else{
            Toolkit.getDefaultToolkit().beep();
            JOptionPane.showMessageDialog(null,"Please Enter Valid Password minimum 8 chracter and maximum 16 character");
            TextNewPassword.setBackground(new Color(246, 53, 40));
            return false;
        }
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ResetPassword.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ResetPassword().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel CompanyLogo;
    private javax.swing.JLabel ConfirmNewPasswordIcon;
    private javax.swing.JLabel ConfirmNewPasswordName;
    private javax.swing.JButton HideConfirmPasswordIcon;
    private javax.swing.JButton HidePasswordIcon;
    private javax.swing.JLabel MinimizeIcon;
    private javax.swing.JLabel NewPasswordIcon;
    private javax.swing.JLabel NewPasswordName;
    private javax.swing.JLabel ResetImg;
    private javax.swing.JLabel ResetPasswordBgImg;
    private javax.swing.JPanel ResetPasswordPanel;
    private javax.swing.JButton ShowConfirmPasswordIcon;
    private javax.swing.JButton ShowPasswordIcon;
    private javax.swing.JPasswordField TextNewConfirmPassword;
    private javax.swing.JPasswordField TextNewPassword;
    private javax.swing.JButton UpdateButton;
    // End of variables declaration//GEN-END:variables
}
